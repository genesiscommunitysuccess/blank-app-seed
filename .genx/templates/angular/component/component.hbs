import { Component, Input, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';
import { CommonModule } from '@angular/common';
import { getUser } from '@genesislcap/foundation-user';
import { ErrorMessageComponent } from '../../../components/error-message/error-message.component';
import { getViewUpdateRightComponent } from '../../../utils';
{{#if tile.config.gridOptions}}
import { GridOptionsConfig } from "@genesislcap/rapid-grid-pro";
{{/if}}
{{#if tile.config.createFormUiSchema}}
import { createFormSchema } from './{{kebabCase tile.title}}.create.form.schema';
{{/if}}
{{#if tile.config.uischema}}
import { createFormSchema } from './{{kebabCase tile.title}}.create.form.schema';
{{/if}}
{{#if tile.config.updateFormUiSchema}}
import { updateFormSchema } from './{{kebabCase tile.title}}.update.form.schema';
{{/if}}
{{#if tile.config.columns}}
import { columnDefs } from './{{kebabCase tile.title}}.column.defs';
{{/if}}
{{#if tile.config.gridOptions}}
import { gridOptions } from './{{kebabCase tile.title}}.gridOptions';
{{/if}}

@Component({
  selector: 'app-{{kebabCase tile.componentName}}',
  templateUrl: './{{kebabCase tile.title}}.component.html',
  styleUrl: './{{kebabCase tile.title}}.component.css',
  standalone: true,
  imports: [
    ErrorMessageComponent,
    CommonModule,
  ],
  schemas: [CUSTOM_ELEMENTS_SCHEMA],
})
export class {{pascalCase tile.componentName}} {
  hasUserPermission = (permissionCode: string) => getViewUpdateRightComponent(getUser(), permissionCode);{{#if tile.config.createFormUiSchema}}
  createFormSchema = createFormSchema;{{/if}}{{#if tile.config.uischema}}
  uischema = createFormSchema;{{/if}}{{#if tile.config.updateFormUiSchema}}
  updateFormSchema = updateFormSchema;{{/if}}{{#if tile.config.columns}}
  columnDefs = columnDefs;{{/if}}{{#if tile.config.gridOptions}}
  gridOptions = gridOptions as GridOptionsConfig;{{/if}}{{#if tile.config.reqrep}}
  reqrep = { pollingInterval: 5000 };{{/if}}{{#if tile.config.type}}
  chartConfig = { {{#ifEquals tile.config.type 'pie'}}
      "radius": 0.75,
      "angleField": "value",
      "colorField": "groupBy",{{else}}
      "xField": "groupBy",
      "yField": "value",{{/ifEquals}}
  };{{/if}}
  
}