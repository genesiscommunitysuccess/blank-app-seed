import { User } from '@genesislcap/foundation-user';
import { customElement, GenesisElement } from '@genesislcap/web-core';
import { FoundationLayout, SerialisedLayout } from '@genesislcap/foundation-layout';
import { {{pascalCase route.name}}Styles as styles } from './{{kebabCase route.name}}.styles';
import { {{pascalCase route.name}}Template as template } from './{{kebabCase route.name}}.template';

@customElement({
  name: '{{kebabCase route.name}}-route',
  template,
  styles,
})
export class {{pascalCase route.name}} extends GenesisElement {
  @User user: User;
  {{#if route.dynamicLayout}}
    layout: FoundationLayout;
    async connectedCallback() {
      super.connectedCallback();
      this.loadGenesisCreateLayout();
    }

    loadGenesisCreateLayout() {
      const dynamicLayout = {{{route.dynamicLayout}}} as unknown as SerialisedLayout;
      if (!this.layout.tryLoadLayoutFromLocalStorage()) {
        this.layout.loadLayout(dynamicLayout);
      }
    }
  {{/if}}
}
