${whenElse(
    (x) => getViewUpdateRightComponent(x.user, '{{config.permissions.viewRight}}'),
    html<{{pascalCase componentName}}>`
        <entity-management
            design-system-prefix="rapid"
            header-case-type="capitalCase"
            enable-row-flashing
            enable-cell-flashing
            {{#if config.title}}
            title="{{ config.title }}"
            {{/if}}
            resourceName="{{ config.resourceName }}"
            {{#if config.createEvent}}
            createEvent="${(x) => getViewUpdateRightComponent(x.user, '{{config.permissions.updateRight}}', '{{ config.createEvent }}')}"
            {{#if config.createFormUiSchema}}
            :createFormUiSchema=${() => createFormSchema }
            {{/if}}
            {{/if}}
            {{#if config.updateEvent}}
            updateEvent="${(x) => getViewUpdateRightComponent(x.user, '{{config.permissions.updateRight}}', '{{ config.updateEvent }}')}"
            {{#if config.updateFormUiSchema}}
            :updateFormUiSchema=${() => updateFormSchema}
            {{/if}}
            {{/if}}
            {{#if config.deleteEvent}}
            deleteEvent="${(x) => getViewUpdateRightComponent(x.user, '{{config.permissions.updateRight}}', '{{ config.deleteEvent }}')}"
            {{/if}}
            {{#ifAny config.gridOptions config.eventing.publishEventName}}
            :gridOptions=${(x) => ({
              {{#if config.gridOptions}}
              ...gridOptions,{{/if}}{{#if config.eventing.publishEventName}}
              onSelectionChanged: x.handleRowSelection,
              {{/if}}
            })}
            {{/ifAny}}
            {{#ifAny config.reqrep config.eventing.listener}}
            :datasourceConfig=${(x) => ({
              {{#if config.reqrep}}
              pollingInterval: 5000, 
              requestAutoSetup: false,{{/if}}{{#if config.eventing.listener}}
              criteria: x.getCriteria(),
              {{/if}}
            })}
            {{/ifAny}}
            {{#if config.entityName}}
            entityLabel="{{ config.entityName }}"
            {{/if}}
            {{#if config.columns}}
            :columns=${(x) => x.columns}
            {{/if}}
            {{#if config.modalPosition}}
            modal-position="{{ config.modalPosition }}"
            {{/if}}
            {{#if config.sizeColumnsToFit}}
            size-columns-to-fit
            {{/if}}
            {{#if config.enableSearchBar}}
            enable-search-bar
            {{/if}}
            {{#if config.customEvents}}
            :customActions=${() => customActions}
            {{/if}}
        ></entity-management>
    `,
    html`
      <not-permitted-component></not-permitted-component>
    `,
)}
